#+TITLE: Data Curation Tool
#+AUTHOR: nana.
#+DATE: 2023-10-26

* Project Overview

** Project Name: Odesi - Data Curation Tool
** Client: Angular v17
** Server: BunJS

* Table of Contents
  :PROPERTIES:
  :TOC: headlines 2
  :END:

* Introduction
  - Create a web app that customers can use to view and edit metadata of Dataverse files.

* Code Structure
  - Provide an overview of the project's directory structure and where code files are located.

* Client
** Components
  - There are 5 main components in the client:
    - header
    - sidebar
    - table
    - modal
** Key Dependencies
  - ngRx
  - d3

* Server
** Components
  - BunJS.
** Key Dependencies
  - BunJS.
  - fast-xml-parser.

* Development Environment
  - This is here from the template and isn't necessary to understand the project. That being said, this project was developed
    on ArchLinux, using only DoomEmacs, the UI was largely viewed on Firefox 118.0.2, but also Chromium.
    Endpoints were tested initially using Postman, and then Hopscotch

* Configuration
    - Both the client and the server need .env files.
      - client uses it for matomo secret
      - server uses it for dataverse api

* Code Blocks
See repo

* Issues and Challenges
  - Main change in the system is the introduction of NgRx. This massively improved how data is handled accross the app, but came with the
    challenge of easily becoming needlessly complicated. Currently there is a variable and variableGroups, I don't remember why I separated them like that but now it takes a lot of work investigating just to change.
  - I did a bad job of lumping all the data into one file. The reducers file is very bloated, and with proper design, could have been separated sensibly.
  - Importing XMLs properly will involve validating that the XML is in a format we can understand. This might be challenging.

* Future Work
  - Merging the Data Curation and the Data Explorer Tool.
  - Implementing R Any file to DDI.
  - [[https://borsna.github.io/nectar-publisher/][Implementing Nectar Publisher]].

* References
  - List any external resources or documentation referenced during the project.

* Conclusion
  - Summarize the current state of the project.

* TODO List
  - [-] View file variables
    - [x] Show which variables are not assigned to groups
    - [x] View variable chart
    - [x] Edit variable data
    - [-] Move forward and backward between viewed variable (NOTE: does not work within selected group)
  - [-] View file groups
    - [ ] Change group positions
    - [x] Change group name
    - [x] Remove group (NOTE: Does not confirm with user first)
  - [-] Select multiple variables
    - [x] Add to group
    - [ ] Change multiple metadata fields (questions, notes, isWeight)
    - [x] Assign weight
  - [ ] Download
    - [ ] Codebook (Partial DDI)
    - [ ] XML (Full DDI)
    - [ ] HTML
  - [ ] Upload saved changes to Dataverse
  - [ ] Track user changes with Matomo
  - [ ] Change display language
  - [ ] Import XML and do all of the above

* Notes
  - Any additional notes or remarks can be added here.

* Run Sequence
See System Architecture

* Potential Problems
- Importing XMLs properly will involve validating that the XML is in a format we can understand. This might be challenging.
- Converting the XML to JSON on the client could be time consuming, depending on how big the file size is.

* End of Document
