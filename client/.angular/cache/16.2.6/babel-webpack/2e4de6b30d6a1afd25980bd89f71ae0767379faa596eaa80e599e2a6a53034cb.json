{"ast":null,"code":"import { MatLegacyPaginatorIntl as MatPaginatorIntl } from '@angular/material/legacy-paginator';\nexport class MyMatPaginatorIntl extends MatPaginatorIntl {\n  constructor(translateService, translateParser) {\n    super();\n    this.translateService = translateService;\n    this.translateParser = translateParser;\n    this.getRangeLabel = (page, pageSize, length) => {\n      length = Math.max(length, 0);\n      const startIndex = page * pageSize + 1;\n      const endIndex = startIndex <= length ? Math.min(startIndex + pageSize - 1, length) : startIndex + pageSize - 1;\n      return this.translateParser.interpolate(this.rangeLabelIntl, {\n        startIndex,\n        endIndex,\n        length\n      });\n    };\n    this.getTranslations();\n    this.translateService.onLangChange.subscribe(() => this.getTranslations());\n  }\n  getTranslations() {\n    this.translateService.get(['PAGINATOR.ITEMS_PER_PAGE', 'PAGINATOR.NEXT_PAGE', 'PAGINATOR.PREVIOUS_PAGE', 'PAGINATOR.RANGE']).subscribe(translation => {\n      this.itemsPerPageLabel = translation['PAGINATOR.ITEMS_PER_PAGE'];\n      this.nextPageLabel = translation['PAGINATOR.NEXT_PAGE'];\n      this.previousPageLabel = translation['PAGINATOR.PREVIOUS_PAGE'];\n      this.rangeLabelIntl = translation['PAGINATOR.RANGE'];\n      this.changes.next();\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}