{"ast":null,"code":"/*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n\tAuthor:  Stefan Goessner/2006\r\n\tWeb:     http://goessner.net/\r\n*/\nexport function xml2json(xml, tab) {\n  var X = {\n    toObj: function (xml) {\n      var o = {};\n      if (xml.nodeType == 1) {\n        // element node ..\n        if (xml.attributes.length)\n          // element with attributes  ..\n          for (var i = 0; i < xml.attributes.length; i++) o[\"@\" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || \"\").toString();\n        if (xml.firstChild) {\n          // element has child nodes ..\n          var textChild = 0,\n            cdataChild = 0,\n            hasElementChild = false;\n          for (var n = xml.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == 1) hasElementChild = true;else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++; // non-whitespace text\n            else if (n.nodeType == 4) cdataChild++; // cdata section node\n          }\n\n          if (hasElementChild) {\n            if (textChild < 2 && cdataChild < 2) {\n              // structured element with evtl. a single text or/and cdata node ..\n              X.removeWhite(xml);\n              for (var n = xml.firstChild; n; n = n.nextSibling) {\n                if (n.nodeType == 3)\n                  // text node\n                  o[\"#text\"] = X.escape(n.nodeValue);else if (n.nodeType == 4)\n                  // cdata node\n                  o[\"#cdata\"] = X.escape(n.nodeValue);else if (o[n.nodeName]) {\n                  // multiple occurence of element ..\n                  if (o[n.nodeName] instanceof Array) o[n.nodeName][o[n.nodeName].length] = X.toObj(n);else o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\n                } else\n                  // first occurence of element..\n                  o[n.nodeName] = X.toObj(n);\n              }\n            } else {\n              // mixed content\n              if (!xml.attributes.length) o = X.escape(X.innerXml(xml));else o[\"#text\"] = X.escape(X.innerXml(xml));\n            }\n          } else if (textChild) {\n            // pure text\n            if (!xml.attributes.length) o = X.escape(X.innerXml(xml));else o[\"#text\"] = X.escape(X.innerXml(xml));\n          } else if (cdataChild) {\n            // cdata\n            if (cdataChild > 1) o = X.escape(X.innerXml(xml));else for (var n = xml.firstChild; n; n = n.nextSibling) o[\"#cdata\"] = X.escape(n.nodeValue);\n          }\n        }\n        if (!xml.attributes.length && !xml.firstChild) o = null;\n      } else if (xml.nodeType == 9) {\n        // document.node\n        o = X.toObj(xml.documentElement);\n      } else alert(\"unhandled node type: \" + xml.nodeType);\n      return o;\n    },\n    toJson: function (o, name, ind) {\n      var json = name ? \"\\\"\" + name + \"\\\"\" : \"\";\n      if (o instanceof Array) {\n        for (var i = 0, n = o.length; i < n; i++) o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\n        json += (name ? \":[\" : \"[\") + (o.length > 1 ? \"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind : o.join(\"\")) + \"]\";\n      } else if (o == null) json += (name && \":\") + \"null\";else if (typeof o == \"object\") {\n        var arr = [];\n        for (var m in o) arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\n        json += (name ? \":{\" : \"{\") + (arr.length > 1 ? \"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind : arr.join(\"\")) + \"}\";\n      } else if (typeof o == \"string\") json += (name && \":\") + \"\\\"\" + o.toString() + \"\\\"\";else json += (name && \":\") + o.toString();\n      return json;\n    },\n    innerXml: function (node) {\n      var s = \"\";\n      if (\"innerHTML\" in node) s = node.innerHTML;else {\n        var asXml = function (n) {\n          var s = \"\";\n          if (n.nodeType == 1) {\n            s += \"<\" + n.nodeName;\n            for (var i = 0; i < n.attributes.length; i++) s += \" \" + n.attributes[i].nodeName + \"=\\\"\" + (n.attributes[i].nodeValue || \"\").toString() + \"\\\"\";\n            if (n.firstChild) {\n              s += \">\";\n              for (var c = n.firstChild; c; c = c.nextSibling) s += asXml(c);\n              s += \"</\" + n.nodeName + \">\";\n            } else s += \"/>\";\n          } else if (n.nodeType == 3) s += n.nodeValue;else if (n.nodeType == 4) s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\n          return s;\n        };\n        for (var c = node.firstChild; c; c = c.nextSibling) s += asXml(c);\n      }\n      return s;\n    },\n    escape: function (txt) {\n      return txt.replace(/^\\s+|\\s+$/g, '').replace(/[\\\\]/g, \"\\\\\\\\\").replace(/[\\\"]/g, '\\\\\"').replace(/[\\n]/g, '\\\\n').replace(/[\\r]/g, '\\\\r');\n    },\n    removeWhite: function (e) {\n      e.normalize();\n      for (var n = e.firstChild; n;) {\n        if (n.nodeType == 3) {\n          // text node\n          if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\n            // pure whitespace text node\n            var nxt = n.nextSibling;\n            e.removeChild(n);\n            n = nxt;\n          } else n = n.nextSibling;\n        } else if (n.nodeType == 1) {\n          // element node\n          X.removeWhite(n);\n          n = n.nextSibling;\n        } else\n          // any other node\n          n = n.nextSibling;\n      }\n      return e;\n    }\n  };\n  if (xml.nodeType == 9)\n    // document node\n    xml = xml.documentElement;\n  var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\n  return \"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\";\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}