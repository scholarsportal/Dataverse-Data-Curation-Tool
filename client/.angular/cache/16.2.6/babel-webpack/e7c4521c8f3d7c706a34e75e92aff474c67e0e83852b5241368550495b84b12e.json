{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { DdiService } from '../ddi.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/legacy-dialog\";\nimport * as i3 from \"../ddi.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/legacy-button\";\nimport * as i6 from \"@angular/material/legacy-form-field\";\nimport * as i7 from \"@angular/material/legacy-input\";\nimport * as i8 from \"@angular/material/legacy-checkbox\";\nimport * as i9 from \"@angular/material/legacy-select\";\nimport * as i10 from \"@angular/material/legacy-core\";\nimport * as i11 from \"@angular/material/grid-list\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction VarDialogComponent_mat_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", g_r2.varGrp[\"@ID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", g_r2.varGrp.labl, \" \");\n  }\n}\nfunction VarDialogComponent_mat_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const w_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", w_r3[\"@ID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", w_r3[\"@name\"], \" \");\n  }\n}\nexport let VarDialogComponent = /*#__PURE__*/(() => {\n  class VarDialogComponent {\n    constructor(data, formBuilder, dialogRef, ddiService) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.ddiService = ddiService;\n      this.parentUpdateVar = new EventEmitter();\n      this.editObjs = [];\n    }\n    ngOnInit() {\n      // Note: data is passed as any array to allow for multi editing\n      if (this.data.length > 1) {\n        const selectedIds = [];\n        for (let j = 0; j < this.data.length; j++) {\n          selectedIds.push(this.data[j]['@ID']);\n        }\n        const obj = {\n          '@ID': selectedIds.join(','),\n          _group_edit: true\n        };\n        this.editObjs = this.data;\n        this.data = obj;\n      } else {\n        this.data = this.data[0];\n      }\n      // add the groups - create an id with all of them\n      const groups = [];\n      for (let i = 0; i < this.variableGroups.length; i++) {\n        const groupVars = this.variableGroups[i].varGrp['@var'].split(' ');\n        if (groupVars.indexOf(this.data['@ID']) > -1) {\n          groups.push(this.variableGroups[i].varGrp['@ID']);\n        }\n      }\n      this.data['_groups'] = [groups]; // groups;\n      this.addOmittedProperties(this.data);\n      this.form = this.formBuilder.group({\n        id: [{\n          value: this.data ? this.data['@ID'] : '',\n          disabled: true\n        }, Validators.required],\n        name: [{\n          value: this.data ? this.data['@name'] : '',\n          disabled: true\n        }, Validators.required],\n        labl: [this.data ? this.data['labl']['#text'] : '', Validators.required],\n        qstnLit: this.data ? this.data.qstn['qstnLit'] : '',\n        universe: this.data ? this.data.universe['#text'] : '',\n        ivuInstr: this.data ? this.data.qstn['ivuInstr'] : '',\n        postQTxt: this.data ? this.data.qstn['postQTxt'] : '',\n        notes: this.data ? this.data.notes['#cdata'] : '',\n        wgt: this.data ? this.data['@wgt'] : '',\n        wgt_var: this.data ? this.data['@wgt-var'] : '',\n        _groups: this.data ? this.data['_groups'] : []\n      });\n      this.originalVarWeight = this.data['@wgt-var'];\n    }\n    isSelected(_id) {\n      return true;\n    }\n    addOmittedProperties(_obj) {\n      if (typeof _obj.qstn === 'undefined') {\n        _obj.qstn = {};\n      }\n      if (typeof _obj.labl === 'undefined') {\n        _obj.labl = {\n          '#text': ''\n        };\n      }\n      if (typeof _obj.universe === 'undefined') {\n        _obj.universe = {\n          '#text': '',\n          '@clusion': ''\n        };\n      }\n      if (typeof _obj.notes === 'undefined') {\n        _obj.notes = {\n          '#cdata': ''\n        };\n      }\n      return _obj;\n    }\n    updateObjValues(_obj, form) {\n      // update label\n      this.updateObjValue(_obj, 'labl.#text', form.controls.labl);\n      // Literal Question - data.qstn.qstnLit\n      this.updateObjValue(_obj, 'qstn.qstnLit', form.controls.qstnLit);\n      // Interviewer Instructions - data.qstn.ivuInstr\n      this.updateObjValue(_obj, 'qstn.ivuInstr', form.controls.ivuInstr);\n      // Post Question - data.qstn.postQTxt\n      this.updateObjValue(_obj, 'qstn.postQTxt', form.controls.postQTxt);\n      // Universe - data.universe\n      this.updateObjValue(_obj, 'universe.#text', form.controls.universe);\n      // update notes if available data.notes\n      // TODO surround notes with <![CDATA[ before saving back to xml\n      this.updateObjValue(_obj, 'notes.#cdata', form.controls.notes);\n      //\n      this.updateObjValue(_obj, '@wgt-var', form.controls.wgt_var);\n      //\n      console.log(form.controls.wgt.value);\n      if (form.controls.wgt.value === true || form.controls.wgt.value === 'wgt') {\n        _obj['@wgt'] = 'wgt';\n      } else {\n        _obj['@wgt'] = '';\n        // this.removeWeightedFrequencies(_obj);\n      }\n      // add (remove) variable to (from) group\n      if (form.controls._groups.dirty === true) {\n        this.removeVarFromGroups(_obj['@ID']);\n        // add\n        for (let i = 0; i < form.controls._groups.value.length; i++) {\n          const group = this.getVariableGroup(form.controls._groups.value[i]);\n          if (group['@var'] !== '') {\n            group['@var'] = group['@var'] + ' ' + _obj['@ID'];\n          } else {\n            group['@var'] = _obj['@ID'];\n          }\n        }\n      }\n      return _obj;\n    }\n    removeVarFromGroups(varId) {\n      for (let varGrp of this.variableGroups) {\n        console.log(varGrp.varGrp['@var']);\n        if (varGrp.varGrp['@var'].indexOf(varId) === 0) {\n          varGrp.varGrp['@var'] = varGrp.varGrp['@var'].replace(varId, '');\n        } else if (varGrp.varGrp['@var'].indexOf(varId) !== -1) {\n          varGrp.varGrp['@var'] = varGrp.varGrp['@var'].replace(' ' + varId, '');\n        }\n      }\n    }\n    getVariableGroup(_id) {\n      // loop though all the variables in the variable groups and create a complete list\n      for (let i = 0; i < this.variableGroups.length; i++) {\n        if (this.variableGroups[i].varGrp['@ID'] === _id) {\n          return this.variableGroups[i].varGrp;\n        }\n      }\n    }\n    updateObjValue(_obj, _var, _control) {\n      if (_control.dirty === true) {\n        const stack = _var.split('.');\n        while (stack.length > 1) {\n          _obj = _obj[stack.shift()];\n        }\n        _obj[stack.shift()] = _control.value;\n      }\n    }\n    submit(form) {\n      if (this.editObjs.length > 0) {\n        // take all the objects from the\n        for (const i of this.editObjs) {\n          this.data = i;\n          this.addOmittedProperties(this.data);\n          this.updateObjValues(this.data, form);\n          this.parentUpdateVar.emit(this.data);\n        }\n      } else {\n        this.updateObjValues(this.data, form);\n        this.parentUpdateVar.emit(this.data);\n      }\n      if (typeof this.data['@wgt-var'] !== 'undefined') {\n        this.calculateWeightedFrequencies();\n      } else {\n        // Removing weighted frequency\n        if (typeof this.data.catgry !== 'undefined') {\n          for (let k = 0; k < this.data.catgry.length; k++) {\n            if (typeof this.data.catgry[k].catStat !== 'undefined' && this.data.catgry[k].catStat.length > 1) {\n              this.data.catgry[k].catStat.splice(1, 1);\n            }\n          }\n        }\n      }\n      this.dialogRef.close(`${form}`);\n    }\n    cancel() {\n      this.dialogRef.close();\n      this.data['@wgt-var'] = this.originalVarWeight;\n    }\n    calculateWeightedFrequencies() {\n      const weightVariable = this.data['@wgt-var'];\n      const variable = this.data['@ID'];\n      if (typeof weightVariable !== 'undefined') {\n        const id = this.ddiService.getParameterByName('dfId');\n        const baseUrl = this.ddiService.getBaseUrl();\n        const key = this.ddiService.getParameterByName('key');\n        let siteUrl = null;\n        siteUrl = this.ddiService.getParameterByName('siteUrl');\n        let detailUrl = null;\n        console.log(siteUrl);\n        if (!siteUrl) {\n          detailUrl = baseUrl + '/api/access/datafile/' + id + '?format=subset&variables=' + variable + ',' + weightVariable + '&key=' + key;\n        } else {\n          detailUrl = siteUrl + '/api/access/datafile/' + id + '?format=subset&variables=' + variable + ',' + weightVariable + '&key=' + key;\n        }\n        this.ddiService.getDDI(detailUrl).subscribe(data => this.processVariable(data), error => console.log(error), () => this.completeVariable());\n        //  http://localhost:8080/api/access/datafile/41?variables=v885\n      }\n    }\n\n    processVariable(data) {\n      this.weightsAndVariable = data.split('\\n');\n    }\n    completeVariable() {\n      const map_wf = new Map();\n      for (let i = 1; i < this.weightsAndVariable.length; i++) {\n        const vr = this.weightsAndVariable[i].split('\\t');\n        if (map_wf.has(vr[0])) {\n          let wt = map_wf.get(vr[0]);\n          wt = parseFloat(wt) + parseFloat(vr[1]);\n          map_wf.set(vr[0], wt);\n        } else {\n          map_wf.set(vr[0], vr[1]);\n        }\n      }\n      for (let i = 0; i < this.data.catgry.length; i++) {\n        if (!map_wf.has(this.data.catgry[i].catValu)) {\n          map_wf.set(this.data.catgry[i].catValu, 0);\n        }\n        if (typeof this.data.catgry[i].catStat !== 'undefined') {\n          if (typeof this.data.catgry[i].catStat.length !== 'undefined') {\n            if (this.data.catgry[i].catStat.length > 1) {\n              this.data.catgry[i].catStat[1] = {\n                '@wgtd': 'wgtd',\n                '@type': 'freq',\n                '#text': map_wf.get(this.data.catgry[i].catValu)\n              };\n            } else {\n              this.data.catgry[i].catStat.push({\n                '@wgtd': 'wgtd',\n                '@type': 'freq',\n                '#text': map_wf.get(this.data.catgry[i].catValu)\n              });\n            }\n          }\n        }\n      }\n    }\n    static #_ = this.ɵfac = function VarDialogComponent_Factory(t) {\n      return new (t || VarDialogComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MatLegacyDialogRef), i0.ɵɵdirectiveInject(i3.DdiService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VarDialogComponent,\n      selectors: [[\"app-var-dialog\"]],\n      outputs: {\n        parentUpdateVar: \"parentUpdateVar\"\n      },\n      decls: 65,\n      vars: 59,\n      consts: [[\"mat-dialog-content\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-title\", \"\"], [\"cols\", \"2\", \"rowHeight\", \"62\", 1, \"table-controls\"], [\"colspan\", \"1\", \"rowspan\", \"1\"], [\"matInput\", \"\", \"formControlName\", \"id\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"formControlName\", \"name\", 3, \"placeholder\", \"value\"], [\"colspan\", \"2\", \"rowspan\", \"1\"], [1, \"field_width\"], [\"matInput\", \"\", \"formControlName\", \"labl\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"formControlName\", \"qstnLit\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"formControlName\", \"ivuInstr\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"formControlName\", \"postQTxt\", 3, \"placeholder\", \"value\"], [\"matInput\", \"\", \"formControlName\", \"universe\", 3, \"placeholder\", \"value\"], [\"colspan\", \"2\", \"rowspan\", \"2\"], [\"matInput\", \"\", \"formControlName\", \"notes\", 1, \"textarea_height\", 3, \"placeholder\", \"value\"], [\"colspan\", \"2\", \"rowspan\", \"1\", 1, \"field_width\"], [\"formControlName\", \"_groups\", \"multiple\", \"true\", 3, \"value\", \"placeholder\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"wgt_var\", 3, \"value\", \"placeholder\", \"valueChange\"], [1, \"example-section\"], [\"formControlName\", \"wgt\", \"align\", \"end\", 3, \"checked\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [3, \"value\"]],\n      template: function VarDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function VarDialogComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.submit(ctx.form);\n          });\n          i0.ɵɵelementStart(2, \"h1\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵpipe(4, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"mat-dialog-content\")(6, \"mat-grid-list\", 3)(7, \"mat-grid-tile\", 4)(8, \"mat-form-field\");\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵpipe(10, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"mat-grid-tile\", 4)(12, \"mat-form-field\");\n          i0.ɵɵelement(13, \"input\", 6);\n          i0.ɵɵpipe(14, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"mat-grid-tile\", 7)(16, \"mat-form-field\", 8);\n          i0.ɵɵelement(17, \"input\", 9);\n          i0.ɵɵpipe(18, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"mat-grid-tile\", 7)(20, \"mat-form-field\", 8);\n          i0.ɵɵelement(21, \"input\", 10);\n          i0.ɵɵpipe(22, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"mat-grid-tile\", 7)(24, \"mat-form-field\", 8);\n          i0.ɵɵelement(25, \"input\", 11);\n          i0.ɵɵpipe(26, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"mat-grid-tile\", 7)(28, \"mat-form-field\", 8);\n          i0.ɵɵelement(29, \"input\", 12);\n          i0.ɵɵpipe(30, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"mat-grid-tile\", 7)(32, \"mat-form-field\", 8);\n          i0.ɵɵelement(33, \"input\", 13);\n          i0.ɵɵpipe(34, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"mat-grid-tile\", 14)(36, \"mat-form-field\", 8);\n          i0.ɵɵelement(37, \"textarea\", 15);\n          i0.ɵɵpipe(38, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"mat-grid-tile\", 16)(40, \"mat-form-field\", 8)(41, \"mat-select\", 17);\n          i0.ɵɵlistener(\"valueChange\", function VarDialogComponent_Template_mat_select_valueChange_41_listener($event) {\n            return ctx.data[\"_groups\"] = $event;\n          });\n          i0.ɵɵpipe(42, \"translate\");\n          i0.ɵɵtemplate(43, VarDialogComponent_mat_option_43_Template, 2, 2, \"mat-option\", 18);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(44, \"mat-grid-tile\", 4)(45, \"mat-form-field\")(46, \"mat-select\", 19);\n          i0.ɵɵlistener(\"valueChange\", function VarDialogComponent_Template_mat_select_valueChange_46_listener($event) {\n            return ctx.data[\"@wgt-var\"] = $event;\n          });\n          i0.ɵɵpipe(47, \"translate\");\n          i0.ɵɵtemplate(48, VarDialogComponent_mat_option_48_Template, 2, 2, \"mat-option\", 18);\n          i0.ɵɵelementStart(49, \"mat-option\");\n          i0.ɵɵtext(50);\n          i0.ɵɵpipe(51, \"translate\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(52, \"mat-grid-tile\", 4)(53, \"section\", 20)(54, \"mat-checkbox\", 21);\n          i0.ɵɵtext(55);\n          i0.ɵɵpipe(56, \"translate\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(57, \"mat-grid-tile\", 4)(58, \"button\", 22);\n          i0.ɵɵtext(59);\n          i0.ɵɵpipe(60, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(61, \"mat-grid-tile\", 4)(62, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function VarDialogComponent_Template_button_click_62_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(63);\n          i0.ɵɵpipe(64, \"translate\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 29, \"VARDIALOG.VARINFO\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(10, 31, \"VAR.ID\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data[\"@ID\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(14, 33, \"VAR.NAME\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data[\"@name\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(18, 35, \"VAR.LABEL\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.labl[\"#text\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(22, 37, \"VARDIALOG.LITQ\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.qstn.qstnLit);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(26, 39, \"VARDIALOG.INTINSTR\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.qstn.ivuInstr);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(30, 41, \"VARDIALOG.POSTQ\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.qstn.postQTxt);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(34, 43, \"VARDIALOG.UNIVERSE\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.universe[\"#text\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(38, 45, \"VARDIALOG.NOTES\"));\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.data.notes[\"#cdata\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(42, 47, \"VARDIALOG.GROUP\"));\n          i0.ɵɵproperty(\"value\", ctx.data[\"_groups\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.variableGroups);\n          i0.ɵɵadvance(3);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(47, 49, \"VARDIALOG.WEIGHTVAR\"));\n          i0.ɵɵproperty(\"value\", ctx.data[\"@wgt-var\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.weights);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(51, 51, \"VARDIALOG.UNWEIGHTED\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"checked\", ctx.data[\"@wgt\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(56, 53, \"VARDIALOG.ISWEIGHT\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(60, 55, \"VARDIALOG.UPDATE\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(64, 57, \"VARDIALOG.CANCEL\"));\n        }\n      },\n      dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.MatLegacyButton, i6.MatLegacyFormField, i7.MatLegacyInput, i2.MatLegacyDialogTitle, i2.MatLegacyDialogContent, i8.MatLegacyCheckbox, i9.MatLegacySelect, i10.MatLegacyOption, i11.MatGridList, i11.MatGridTile, i12.TranslatePipe],\n      styles: [\".text-inside-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{justify-content:flex-start!important}.field_width[_ngcontent-%COMP%]{width:480px!important}.textarea_height[_ngcontent-%COMP%]{height:80px}.mat-dialog-content[_ngcontent-%COMP%]{overflow:visible}\"]\n    });\n  }\n  return VarDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}