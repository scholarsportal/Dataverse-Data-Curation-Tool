{"ast":null,"code":"import { ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport { MatLegacySnackBar as MatSnackBar } from '@angular/material/legacy-snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\nimport { VarDialogComponent } from '../var-dialog/var-dialog.component';\nimport { VarStatDialogComponent } from '../var-stat-dialog/var-stat-dialog.component';\nimport { UntypedFormControl } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DdiService } from '../ddi.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"@angular/material/legacy-snack-bar\";\nimport * as i3 from \"../ddi.service\";\nimport * as i4 from \"@ngx-translate/core\";\nconst _c0 = [\"group_select\"];\nconst _c1 = [\"group_edit\"];\nfunction VarComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", g_r22.varGrp[\"@ID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", g_r22.varGrp.labl, \" \");\n  }\n}\nfunction VarComponent_mat_header_cell_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-header-cell\")(1, \"mat-checkbox\", 24);\n    i0.ɵɵlistener(\"change\", function VarComponent_mat_header_cell_17_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r23.masterToggle() : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r2.selection.hasValue() && ctx_r2.isAllSelected())(\"indeterminate\", ctx_r2.selection.hasValue() && !ctx_r2.isAllSelected());\n  }\n}\nfunction VarComponent_mat_cell_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"mat-checkbox\", 25);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_cell_18_Template_mat_checkbox_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const row_r25 = restoredCtx.$implicit;\n      const i_r26 = restoredCtx.index;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event.shiftKey ? ctx_r27.multipleToggle(row_r25, i_r26, $event) : ctx_r27.singleToggle(i_r26, $event));\n    })(\"change\", function VarComponent_mat_cell_18_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const row_r25 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      $event ? ctx_r29.selection.toggle(row_r25) : null;\n      return i0.ɵɵresetView(ctx_r29.checkSelection());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r25 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(2, 2, \"VAR.SELECT\"));\n    i0.ɵɵproperty(\"checked\", ctx_r3.selection.isSelected(row_r25));\n  }\n}\nfunction VarComponent_mat_header_cell_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-header-cell\")(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_header_cell_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onRemoveAll());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵtext(5, \"indeterminate_check_box\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(2, 2, \"GROUPS.REMOVEALL\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(4, 4, \"GROUPS.REMOVE\"));\n  }\n}\nfunction VarComponent_mat_cell_21_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_cell_21_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const row_r32 = i0.ɵɵnextContext().$implicit;\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onRemove(row_r32[\"@ID\"]));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵtext(4, \"indeterminate_check_box\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"GROUPS.REMOVE\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 4, \"GROUPS.REMOVE\"));\n  }\n}\nfunction VarComponent_mat_cell_21_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_cell_21_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const row_r32 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onAdd(row_r32[\"@ID\"]));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵtext(4, \"add_box\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"GROUPS.ADDTO\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 4, \"GROUPS.ADDTO\"));\n  }\n}\nfunction VarComponent_mat_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtemplate(1, VarComponent_mat_cell_21_button_1_Template, 5, 6, \"button\", 27);\n    i0.ɵɵtemplate(2, VarComponent_mat_cell_21_button_2_Template, 5, 6, \"button\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r32 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r32._show);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r32._show);\n  }\n}\nfunction VarComponent_mat_header_cell_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"VAR.ID\"));\n  }\n}\nfunction VarComponent_mat_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r42 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r42[\"id\"], \" \");\n  }\n}\nfunction VarComponent_mat_header_cell_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 28);\n    i0.ɵɵtext(1, \"order\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VarComponent_mat_cell_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r43 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r43[\"_order\"], \" \");\n  }\n}\nfunction VarComponent_mat_header_cell_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"VAR.NAME\"));\n  }\n}\nfunction VarComponent_mat_cell_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r44 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", row_r44[\"@name\"].length > 30 ? i0.ɵɵpipeBind3(2, 1, row_r44[\"@name\"], 0, 30) + \"...\" : row_r44[\"@name\"], \" \");\n  }\n}\nfunction VarComponent_mat_header_cell_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"VAR.LABEL\"));\n  }\n}\nfunction VarComponent_mat_cell_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r45 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r45.labl[\"#text\"].length > 150 ? i0.ɵɵpipeBind3(2, 1, row_r45.labl[\"#text\"], 0, 150) + \"...\" : row_r45.labl[\"#text\"], \" \");\n  }\n}\nfunction VarComponent_mat_header_cell_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"VAR.WEIGHT\"));\n  }\n}\nfunction VarComponent_mat_cell_36_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", row_r46[\"@wgt-var\"], \" \");\n  }\n}\nfunction VarComponent_mat_cell_36_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r46 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r46[\"@wgt\"]);\n  }\n}\nfunction VarComponent_mat_cell_36_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, VarComponent_mat_cell_36_ng_template_2_span_0_Template, 2, 1, \"span\", 31);\n  }\n  if (rf & 2) {\n    const row_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", row_r46[\"@wgt\"]);\n  }\n}\nfunction VarComponent_mat_cell_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtemplate(1, VarComponent_mat_cell_36_span_1_Template, 2, 1, \"span\", 29);\n    i0.ɵɵtemplate(2, VarComponent_mat_cell_36_ng_template_2_Template, 1, 1, \"ng-template\", null, 30, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r46 = ctx.$implicit;\n    const _r48 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r46[\"@wgt-var\"])(\"ngIfElse\", _r48);\n  }\n}\nfunction VarComponent_mat_header_cell_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"VAR.VIEW\"));\n  }\n}\nfunction VarComponent_mat_cell_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_cell_39_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r57);\n      const row_r54 = restoredCtx.$implicit;\n      const ctx_r56 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r56.onView(row_r54[\"@ID\"]));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵtext(5, \"visibility\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(2, 2, \"VAR.VIEW\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(4, 4, \"VAR.VIEW\"));\n  }\n}\nfunction VarComponent_mat_header_cell_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-header-cell\")(1, \"button\", 32, 33);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_header_cell_41_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r59.onEditSelected());\n    });\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵtext(6, \"edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(3, 2, \"VAR.GROUPEDIT\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(5, 4, \"VAR.GROUPEDIT\"));\n  }\n}\nfunction VarComponent_mat_cell_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function VarComponent_mat_cell_42_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const row_r61 = restoredCtx.$implicit;\n      const ctx_r63 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r63.onEdit(row_r61[\"@ID\"]));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵtext(5, \"edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(2, 2, \"VAR.EDIT\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(4, 4, \"VAR.EDIT\"));\n  }\n}\nfunction VarComponent_mat_header_row_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nconst _c2 = function (a0, a1) {\n  return {\n    unvis: a0,\n    active: a1\n  };\n};\nfunction VarComponent_mat_row_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\", 34);\n  }\n  if (rf & 2) {\n    const row_r65 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c2, row_r65._show != true, row_r65._active == true));\n  }\n}\nexport let VarComponent = /*#__PURE__*/(() => {\n  class VarComponent {\n    getDisplayedColumns() {\n      let displayedColumns = []; // 'order_arrows'\n      if (this.mode === 'all') {\n        displayedColumns = ['select', 'id', 'name', 'labl', 'wgt-var', 'view', 'action'];\n      } else {\n        displayedColumns = ['control', 'id', 'name', 'labl', 'wgt-var', 'view', 'action'];\n      }\n      return displayedColumns;\n    }\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.datasource.data.length;\n      return numSelected === numRows;\n    }\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n      if (this.isAllSelected()) {\n        this.selection.clear();\n      } else {\n        for (let i = 0; i < this.datasource.data.length; i++) {\n          if (this.datasource.data[i]._show === true) {\n            this.selection.select(this.datasource.data[i]);\n          }\n        }\n      }\n      this.checkSelection();\n    }\n    constructor(dialog, ref, snackBar, ddiService, translate) {\n      this.dialog = dialog;\n      this.ref = ref;\n      this.snackBar = snackBar;\n      this.ddiService = ddiService;\n      this.translate = translate;\n      this.searchFilter = new UntypedFormControl();\n      this.selection = new SelectionModel(true, []);\n      this.filterValues = {\n        search: '',\n        _show: true\n      };\n      this.startSelection = null;\n      this.endSelection = null;\n      this.renderedData = null;\n      this.startSelectionGroup = null;\n      this.endSelectionGroup = null;\n      this.mode = 'all';\n      this.varChange = false;\n      this.variableGroupsVars = [];\n    }\n    ngOnInit() {\n      this.ddiService.currentSearchInput.subscribe(message => this.searchFilter.patchValue(''));\n      this.searchFilter.valueChanges.subscribe(value => {\n        this.filterValues['search'] = value;\n        this.datasource.filter = JSON.stringify(this.filterValues);\n      });\n      this.group_select['hidden'] = true;\n    }\n    getPageSizeOptions() {\n      if (typeof this.datasource !== 'undefined') {\n        if (this.datasource.paginator.length > 100) {\n          return [25, 50, 100, this.datasource.paginator.length];\n        } else if (this.datasource.paginator.length > 50 && this.datasource.paginator.length < 100) {\n          return [25, 50, this.datasource.paginator.length];\n        } else if (this.datasource.paginator.length > 25 && this.datasource.paginator.length < 50) {\n          return [25, this.datasource.paginator.length];\n        } else if (this.datasource.paginator.length >= 0 && this.datasource.paginator.length < 25) {\n          return [this.datasource.paginator.length];\n        } else {\n          return [25, 50, 100];\n        }\n      } else {\n        return [25];\n      }\n    }\n    // Entry point - when data has been loaded\n    onUpdateVars(data) {\n      this._variables = data;\n      // make sure all the data is set to show\n      for (let i = 0; i < this._variables.length; i++) {\n        this._variables[i]._show = true;\n        // also make sure it has a label\n        if (typeof this._variables[i].labl === 'undefined') {\n          this._variables[i].labl = {\n            '#text': '',\n            '@level': 'variable'\n          };\n        }\n      }\n      // show if var is _in_group\n      this.updateGroupsVars(true);\n      this.datasource = new MatTableDataSource(this._variables);\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n      // sorting\n      this.datasource.sortingDataAccessor = (datasort, property) => {\n        switch (property) {\n          case 'id':\n            return +datasort['@ID'].replace(/\\D/g, '');\n          case 'name':\n            return datasort['@name'];\n          case 'labl':\n            return datasort.labl['#text'];\n          case '_order':\n            return datasort._order;\n          case 'wgt-var':\n            if (datasort['@wgt'] === 'wgt') {\n              return datasort['@wgt'];\n            }\n            return datasort['@wgt-var'];\n          default:\n            return '';\n        }\n      };\n      // filter\n      this.datasource.filterPredicate = this.createFilter();\n      this.datasource.connect().subscribe(d => this.renderedData = d);\n    }\n    createFilter() {\n      const filterFunction = function (data, filter) {\n        const searchTerms = JSON.parse(filter);\n        try {\n          return data['@ID'].toString().toLowerCase().indexOf(searchTerms.search.toLowerCase()) !== -1 || data['@name'].toString().toLowerCase().indexOf(searchTerms.search.toLowerCase()) !== -1 || data['labl']['#text'].toString().toLowerCase().indexOf(searchTerms.search.toLowerCase()) !== -1;\n        } catch (e) {\n          return false;\n        }\n      };\n      return filterFunction;\n    }\n    onEdit(_id) {\n      this.id = _id;\n      // get the data\n      this.openDialog([this.getObjByID(_id, this._variables)]);\n    }\n    onSubset(_ids, sort) {\n      if (_ids == null) {\n        this.mode = 'all';\n      } else {\n        this.mode = 'group';\n      }\n      const data = [];\n      let ungroupedCount = 0;\n      let obj;\n      for (let i = 0; i < this._variables.length; i++) {\n        obj = this._variables[i];\n        if (this.mode === 'group') {\n          if (_ids.indexOf(obj['@ID']) !== -1) {\n            obj._order = _ids.indexOf(obj['@ID']);\n            obj._show = true;\n            data.push(obj);\n          } else {\n            ungroupedCount += 1;\n            obj._order = 99999 + ungroupedCount;\n            obj._show = false;\n          }\n        } else if (this.mode === 'all') {\n          obj._order = null;\n          obj._show = true;\n          data.push(obj);\n        }\n      }\n      obj._active = false;\n      this.filterValues['_show'] = true;\n      this.datasource.filter = JSON.stringify(this.filterValues);\n      // Showing all\n      this.checkSelection(); // and enable group dropdown if applicable\n      this.datasource.data = data;\n      if (this.mode === 'group') {\n        if (sort == null || sort) {\n          this.sortByOrder();\n          this.paginator.firstPage();\n        }\n      } else {\n        if (sort == null || sort) {\n          this.sort.sort({\n            id: '',\n            start: 'asc',\n            disableClear: false\n          });\n          this.paginator.firstPage();\n        }\n      }\n    }\n    // when a single row has been updated\n    onUpdateVar() {\n      this.varChange = true;\n      this.removeWeightedFreq();\n      this.ref.detectChanges();\n    }\n    removeWeightedFreq() {\n      const weights = this.getWeights();\n      const weightsSet = new Set(weights);\n      for (let i = 0; i < this._variables.length; i++) {\n        if (typeof this._variables[i]['@wgt-var'] !== 'undefined') {\n          if (this._variables[i]['@wgt-var'] !== '') {\n            if (!weightsSet.has(this._variables[i]['@wgt-var'])) {\n              this._variables[i]['@wgt-var'] = '';\n              for (let k = 0; k < this._variables[i].catgry.length; k++) {\n                this._variables[i].catgry[k].catStat.splice(1, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n    // get the var\n    getObjByID(_id, _data) {\n      for (const i of _data) {\n        const obj = i;\n        if (obj['@ID'] === _id) {\n          return obj;\n        }\n      }\n    }\n    // get the group\n    getObjByIDNested(_id, _data) {\n      for (const i of _data) {\n        const obj = i;\n        if (obj.varGrp['@ID'] === _id) {\n          return obj;\n        }\n      }\n    }\n    getWeightsNames() {\n      const weightsNames = [];\n      for (let i = 0; i < this._variables.length; i++) {\n        if (this._variables[i]['@wgt'] === 'wgt') {\n          weightsNames.push(this._variables[i]);\n        }\n      }\n      return weightsNames;\n    }\n    getWeights() {\n      const weights = [];\n      for (let i = 0; i < this._variables.length; i++) {\n        if (this._variables[i]['@wgt'] === 'wgt') {\n          weights.push(this._variables[i]['@ID']);\n        }\n      }\n      return weights;\n    }\n    openDialog(data) {\n      this.dialogRef = this.dialog.open(VarDialogComponent, {\n        width: '35em',\n        data: data,\n        panelClass: 'field_width'\n      });\n      const weightsNames = this.getWeightsNames();\n      this.dialogRef.componentInstance.weights = weightsNames;\n      this.dialogRef.componentInstance.variableGroups = this.variableGroups;\n      const sub = this.dialogRef.componentInstance.parentUpdateVar.subscribe(() => {\n        this.onUpdateVar();\n        for (let i = 0; i < this.variableGroups.length; i++) {\n          if (this.variableGroups[i].active) {\n            const vars = this.variableGroups[i].varGrp['@var'].split(' ');\n            this.onSubset(vars);\n            break;\n          }\n        }\n      });\n    }\n    multipleToggle(row, i, event) {\n      let selectFlag = false;\n      if (this.selection.isSelected(row)) {\n        selectFlag = true;\n        this.selection.deselect(row);\n      } else {\n        selectFlag = false;\n        this.selection.select(row);\n      }\n      if (this.startSelection == null) {\n        this.startSelection = i;\n      } else {\n        this.endSelection = i;\n        let currentIndex = 0;\n        this.renderedData.forEach(r => {\n          if (this.startSelection <= this.endSelection) {\n            if (currentIndex >= this.startSelection && currentIndex <= this.endSelection) {\n              if (selectFlag) {\n                this.selection.deselect(r);\n              } else {\n                this.selection.select(r);\n              }\n            }\n            currentIndex++;\n          } else {\n            if (currentIndex >= this.endSelection && currentIndex <= this.startSelection) {\n              if (selectFlag) {\n                this.selection.deselect(r);\n              } else {\n                this.selection.select(r);\n              }\n            }\n            currentIndex++;\n          }\n        });\n        this.startSelection = null;\n        this.endSelection = null;\n      }\n      this.checkSelection();\n    }\n    singleToggle(i, event) {\n      this.startSelection = i;\n      this.endSelection = null;\n      event.stopPropagation();\n    }\n    checkSelection() {\n      // when are in all view mode\n      if (this.mode === 'all') {\n        if (this.selection.selected.length > 0) {\n          this.group_select['disabled'] = 'false';\n          this.group_select['hidden'] = false;\n        } else {\n          this.group_select['disabled'] = 'true';\n          this.group_select['hidden'] = true;\n        }\n      }\n      if (this.selection.selected.length > 1) {\n        this.group_edit['disabled'] = 'false';\n      } else {\n        this.group_edit['disabled'] = 'true';\n      }\n    }\n    addToGroup(_id) {\n      // first get the group\n      const obj = this.getObjByIDNested(_id, this.variableGroups);\n      const vars = obj.varGrp['@var'].split(' ');\n      for (const i of this.selection.selected) {\n        const selected = i;\n        if (vars.indexOf(selected['@ID']) === -1) {\n          vars.push(selected['@ID']);\n        }\n      }\n      // reset vars to new selection\n      obj.varGrp['@var'] = vars.join(' ');\n      // reset the dropdown\n      this.group_select['value'] = 0;\n      //\n      this.updateGroupsVars();\n      this.showMSG(this.translate.instant('GROUPS.ADDEDTO') + obj.varGrp.labl);\n      this.selection.clear();\n    }\n    selectGroup(_id) {\n      this.group_select['value'] = _id;\n      this.selection.clear();\n    }\n    disableSelectGroup() {\n      this.group_select['value'] = 0;\n    }\n    updateGroupsVars(load) {\n      this.getVariableGroupsVars();\n      for (let i = 0; i < this._variables.length; i++) {\n        if (this.variableGroupsVars.indexOf(this._variables[i]['@ID']) > -1) {\n          this._variables[i]._in_group = true;\n        } else {\n          this._variables[i]._in_group = false;\n        }\n      }\n      if (load == null || !load) {\n        this.varChange = true;\n      }\n    }\n    getVariableGroupsVars() {\n      this.variableGroupsVars = [];\n      // loop though all the variables in the varaible groups and create a complete list\n      for (let i = 0; i < this.variableGroups.length; i++) {\n        const obj = this.variableGroups[i];\n        const vars = obj.varGrp['@var'].split(' ');\n        for (let j = 0; j < vars.length; j++) {\n          if (this.variableGroupsVars.indexOf(vars[j]) === -1) {\n            this.variableGroupsVars.push(vars[j]);\n          }\n        }\n      }\n    }\n    sortByOrder() {\n      this.sort.sort({\n        id: '',\n        start: 'asc',\n        disableClear: false\n      });\n      this.sort.sort({\n        id: '_order',\n        start: 'asc',\n        disableClear: false\n      });\n    }\n    highlightRow(_row) {\n      _row._active = true;\n    }\n    onAdd(_id) {\n      const obj = this.updateGroupVars('add', _id);\n      this.showMSG(this.translate.instant('GROUPS.ADDEDID', {\n        _id\n      }) + obj.varGrp.labl);\n    }\n    onRemoveAll() {\n      const obj = this.getObjByIDNested(this.group_select['value'], this.variableGroups);\n      const vars = obj.varGrp['@var'].split(' ');\n      vars.splice(0, vars.length); // empty array (remove all elements from group\n      obj.varGrp['@var'] = vars.join(' ');\n      this.updateGroupsVars();\n      this.onSubset(vars);\n    }\n    multipleToggleRemove(row, i, event) {\n      if (this.startSelectionGroup == null) {\n        this.startSelectionGroup = i;\n      } else {\n        this.endSelectionGroup = i;\n        console.log(this.datasource.data);\n        let currentIndex = 0;\n        this.renderedData.forEach(r => {\n          if (this.startSelectionGroup <= this.endSelectionGroup) {\n            if (currentIndex >= this.startSelectionGroup && currentIndex <= this.endSelectionGroup) {\n              const obj = this.updateGroupVars('remove', r['@ID'], false);\n              this.showMSG(this.translate.instant('GROUPS.REMOVE'));\n            }\n            currentIndex++;\n          } else {\n            if (currentIndex >= this.endSelectionGroup && currentIndex <= this.startSelectionGroup) {\n              const obj = this.updateGroupVars('remove', r['@ID'], false);\n              this.showMSG(this.translate.instant('GROUPS.REMOVE'));\n            }\n            currentIndex++;\n          }\n        });\n        this.startSelectionGroup = null;\n        this.endSelectionGroup = null;\n      }\n      event.stopPropagation();\n    }\n    onRemove(_id) {\n      const obj = this.updateGroupVars('remove', _id, false);\n      this.showMSG(this.translate.instant('GROUPS.REMOVEDID', {\n        _id\n      }) + obj.varGrp.labl);\n    }\n    updateGroupVars(_type, _id, sort) {\n      const obj = this.getObjByIDNested(this.group_select['value'], this.variableGroups);\n      const vars = obj.varGrp['@var'].split(' ');\n      //\n      if (_type === 'remove') {\n        vars.splice(vars.indexOf(_id), 1); // remove from array\n      } else if (_type === 'add') {\n        vars.push(_id); // add to end of array\n      }\n      //\n      obj.varGrp['@var'] = vars.join(' ');\n      // reset the table\n      this.updateGroupsVars();\n      this.onSubset(vars, sort);\n      return obj;\n    }\n    onEditSelected() {\n      const selectedObjs = [];\n      // show the popup but only allow certain fields be be updated\n      for (const i of this.selection.selected) {\n        const selected = i;\n        selectedObjs.push(selected);\n      }\n      this.openDialog(selectedObjs);\n    }\n    onView(_id) {\n      const data = this.getObjByID(_id, this._variables);\n      // open a dialog showing the variables\n      this.dialogStatRef = this.dialog.open(VarStatDialogComponent, {\n        width: '35em',\n        data: data,\n        panelClass: 'field_width'\n      });\n    }\n    showMSG(_msg) {\n      this.snackBar.open(_msg, '', {\n        duration: 1000\n      });\n    }\n    sortChange(sort) {\n      console.log(\"sortChange\");\n      console.log(sort);\n      let vars = [];\n      for (let i = 0; i < this._variables.length; i++) {\n        if (this._variables[i]['_show']) {\n          vars.push(this._variables[i]);\n        }\n      }\n      this.datasource.data = vars;\n      this.datasource.data.sort();\n      this.datasource.connect().subscribe(d => this.renderedData = d);\n    }\n    static #_ = this.ɵfac = function VarComponent_Factory(t) {\n      return new (t || VarComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.MatLegacySnackBar), i0.ɵɵdirectiveInject(i3.DdiService), i0.ɵɵdirectiveInject(i4.TranslateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VarComponent,\n      selectors: [[\"app-var\"]],\n      viewQuery: function VarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(MatSort, 7);\n          i0.ɵɵviewQuery(MatPaginator, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.group_select = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.group_edit = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        }\n      },\n      hostBindings: function VarComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"matSortChange\", function VarComponent_matSortChange_HostBindingHandler($event) {\n            return ctx.sortChange($event);\n          });\n        }\n      },\n      inputs: {\n        variableGroups: \"variableGroups\"\n      },\n      decls: 45,\n      vars: 14,\n      consts: [[\"cols\", \"3\", \"rowHeight\", \"64\", 1, \"table-controls\"], [\"matInput\", \"\", 3, \"formControl\", \"placeholder\"], [\"matSuffix\", \"\"], [3, \"pageSizeOptions\"], [3, \"vertical\"], [\"color\", \"primary\", \"disabled\", \"true\", 3, \"placeholder\", \"hidden\", \"selectionChange\"], [\"group_select\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\", \"matSortChange\"], [\"matColumnDef\", \"select\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"control\"], [\"matColumnDef\", \"id\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"_order\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"labl\"], [\"matColumnDef\", \"wgt-var\"], [\"matColumnDef\", \"view\"], [\"matColumnDef\", \"action\"], [4, \"matHeaderRowDef\"], [3, \"ngClass\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"value\"], [3, \"checked\", \"indeterminate\", \"change\"], [3, \"checked\", \"matTooltip\", \"click\", \"change\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"matTooltip\", \"click\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"matTooltip\", \"click\", 4, \"ngIf\"], [\"mat-sort-header\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", \"disabled\", \"true\", 3, \"matTooltip\", \"click\"], [\"group_edit\", \"\"], [3, \"ngClass\"]],\n      template: function VarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-grid-list\", 0)(1, \"mat-grid-tile\")(2, \"mat-form-field\");\n          i0.ɵɵelement(3, \"input\", 1);\n          i0.ɵɵpipe(4, \"translate\");\n          i0.ɵɵelementStart(5, \"span\", 2)(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"search\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(8, \"mat-paginator\", 3)(9, \"mat-divider\", 4);\n          i0.ɵɵelementStart(10, \"mat-grid-tile\")(11, \"mat-select\", 5, 6);\n          i0.ɵɵlistener(\"selectionChange\", function VarComponent_Template_mat_select_selectionChange_11_listener($event) {\n            return ctx.addToGroup($event.value);\n          });\n          i0.ɵɵpipe(13, \"translate\");\n          i0.ɵɵtemplate(14, VarComponent_mat_option_14_Template, 2, 2, \"mat-option\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"mat-table\", 8);\n          i0.ɵɵlistener(\"matSortChange\", function VarComponent_Template_mat_table_matSortChange_15_listener($event) {\n            return ctx.sortChange($event);\n          });\n          i0.ɵɵelementContainerStart(16, 9);\n          i0.ɵɵtemplate(17, VarComponent_mat_header_cell_17_Template, 2, 2, \"mat-header-cell\", 10);\n          i0.ɵɵtemplate(18, VarComponent_mat_cell_18_Template, 3, 4, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(19, 12);\n          i0.ɵɵtemplate(20, VarComponent_mat_header_cell_20_Template, 6, 6, \"mat-header-cell\", 10);\n          i0.ɵɵtemplate(21, VarComponent_mat_cell_21_Template, 3, 2, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(22, 13);\n          i0.ɵɵtemplate(23, VarComponent_mat_header_cell_23_Template, 3, 3, \"mat-header-cell\", 14);\n          i0.ɵɵtemplate(24, VarComponent_mat_cell_24_Template, 2, 1, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(25, 15);\n          i0.ɵɵtemplate(26, VarComponent_mat_header_cell_26_Template, 2, 0, \"mat-header-cell\", 14);\n          i0.ɵɵtemplate(27, VarComponent_mat_cell_27_Template, 2, 1, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(28, 16);\n          i0.ɵɵtemplate(29, VarComponent_mat_header_cell_29_Template, 3, 3, \"mat-header-cell\", 14);\n          i0.ɵɵtemplate(30, VarComponent_mat_cell_30_Template, 3, 5, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(31, 17);\n          i0.ɵɵtemplate(32, VarComponent_mat_header_cell_32_Template, 3, 3, \"mat-header-cell\", 14);\n          i0.ɵɵtemplate(33, VarComponent_mat_cell_33_Template, 3, 5, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(34, 18);\n          i0.ɵɵtemplate(35, VarComponent_mat_header_cell_35_Template, 3, 3, \"mat-header-cell\", 14);\n          i0.ɵɵtemplate(36, VarComponent_mat_cell_36_Template, 4, 2, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(37, 19);\n          i0.ɵɵtemplate(38, VarComponent_mat_header_cell_38_Template, 3, 3, \"mat-header-cell\", 10);\n          i0.ɵɵtemplate(39, VarComponent_mat_cell_39_Template, 6, 6, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(40, 20);\n          i0.ɵɵtemplate(41, VarComponent_mat_header_cell_41_Template, 7, 6, \"mat-header-cell\", 10);\n          i0.ɵɵtemplate(42, VarComponent_mat_cell_42_Template, 6, 6, \"mat-cell\", 11);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(43, VarComponent_mat_header_row_43_Template, 1, 0, \"mat-header-row\", 21);\n          i0.ɵɵtemplate(44, VarComponent_mat_row_44_Template, 1, 4, \"mat-row\", 22);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(12);\n          i0.ɵɵadvance(3);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(4, 10, \"VAR.SEARCH\"));\n          i0.ɵɵproperty(\"formControl\", ctx.searchFilter);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"pageSizeOptions\", ctx.getPageSizeOptions());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"vertical\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(13, 12, \"GROUPS.ADDSELECTED\"));\n          i0.ɵɵproperty(\"hidden\", _r0.hidden);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.variableGroups);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"dataSource\", ctx.datasource);\n          i0.ɵɵadvance(28);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.getDisplayedColumns());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.getDisplayedColumns());\n        }\n      },\n      styles: [\".grey[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]{color:#767676}.active[_ngcontent-%COMP%]{background:#6d9cff}.mat-header-cell[_ngcontent-%COMP%]{color:#0009}.mat-column-select[_ngcontent-%COMP%]{flex:0 1 70px}.mat-column-control[_ngcontent-%COMP%]{flex:0 1 50px}.mat-column-id[_ngcontent-%COMP%]{flex:0 1 100px}.mat-column-name[_ngcontent-%COMP%]{flex:1 1 100px}.mat-column-labl[_ngcontent-%COMP%]{flex:1 1 600px}.mat-column-wgt-var[_ngcontent-%COMP%]{flex:0 1 100px}.mat-column-view[_ngcontent-%COMP%], .mat-column-action[_ngcontent-%COMP%]{flex:0 1 75px}.unvis[_ngcontent-%COMP%]{visibility:hidden}\"]\n    });\n  }\n  return VarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}