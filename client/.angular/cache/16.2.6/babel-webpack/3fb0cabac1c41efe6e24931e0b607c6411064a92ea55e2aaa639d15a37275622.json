{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DdiService = /*#__PURE__*/(() => {\n  class DdiService {\n    constructor(http) {\n      this.http = http;\n      this.searchInput = new BehaviorSubject('');\n      this.currentSearchInput = this.searchInput.asObservable();\n    }\n    getDDI(url) {\n      return this.http.get(url, {\n        responseType: 'text'\n      });\n    }\n    putDDI(url, body, key) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/xml',\n          'X-Dataverse-key': key\n        })\n      };\n      return this.http.put(url, body, httpOptions);\n      // return this.http.post(url,body, httpOptions);\n    }\n\n    getParameterByName(name) {\n      const url = window.location.href;\n      name = name.replace(/[\\[\\]]/g, '\\\\$&');\n      const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n      const results = regex.exec(url);\n      if (!results) {\n        return null;\n      }\n      if (!results[2]) {\n        return '';\n      }\n      return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n    getBaseUrl() {\n      const protocol = window.location.protocol;\n      const host = window.location.hostname;\n      const port = window.location.port;\n      /*  if (port === '4200') {\n          port = '8080';\n        }*/\n      let baseUrl = protocol + '//' + host;\n      if (port != null || typeof port !== 'undefined') {\n        baseUrl = baseUrl + ':' + port;\n      }\n      return baseUrl;\n    }\n    clearSearch() {\n      this.searchInput.next('');\n    }\n    static #_ = this.ɵfac = function DdiService_Factory(t) {\n      return new (t || DdiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DdiService,\n      factory: DdiService.ɵfac\n    });\n  }\n  return DdiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}